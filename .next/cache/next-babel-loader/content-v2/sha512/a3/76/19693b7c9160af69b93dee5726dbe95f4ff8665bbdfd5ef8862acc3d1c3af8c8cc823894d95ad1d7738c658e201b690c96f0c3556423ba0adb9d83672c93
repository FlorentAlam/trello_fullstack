{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\components\\\\ListeTitle.tsx\";\nimport { useState } from \"react\";\n\nconst ListeTitle = ({\n  title\n}) => {\n  const {\n    0: isUpdatingTitle,\n    1: toggleUpdating\n  } = useState(false);\n  const {\n    0: listeTitle,\n    1: setTitle\n  } = useState(title);\n\n  const test = () => {\n    console.log(\"pouet\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: listeTitle,\n    onChange: event => {\n      setTitle(event.target.value);\n    },\n    disabled: !isUpdatingTitle,\n    onClick: test\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ListeTitle;","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/components/ListeTitle.tsx"],"names":["useState","ListeTitle","title","isUpdatingTitle","toggleUpdating","listeTitle","setTitle","test","console","log","event","target","value"],"mappings":";;AAAA,SAAyCA,QAAzC,QAAyD,OAAzD;;AAMA,MAAMC,UAA+C,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACjE,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAoCJ,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAACK,UAAD;AAAA,OAAaC;AAAb,MAAyBN,QAAQ,CAACE,KAAD,CAAvC;;AAEA,QAAMK,IAAI,GAAG,MAAM;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAFD;;AAIA,sBACI;AACI,IAAA,KAAK,EAAEJ,UADX;AAEI,IAAA,QAAQ,EACHK,KAAD,IAA0C;AACtCJ,MAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACH,KALT;AAOI,IAAA,QAAQ,EAAE,CAACT,eAPf;AAQI,IAAA,OAAO,EAAEI;AARb;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAnBD;;AAqBA,eAAeN,UAAf","sourcesContent":["import { ChangeEvent, FunctionComponent, useState } from \"react\";\r\n\r\ninterface IListeTitleProps{\r\n    title: string\r\n}\r\n\r\nconst ListeTitle: FunctionComponent<IListeTitleProps> = ({title}) => {\r\n    const [isUpdatingTitle, toggleUpdating] = useState(false);\r\n    const [listeTitle, setTitle] = useState(title);\r\n\r\n    const test = () => {\r\n        console.log(\"pouet\");\r\n    }\r\n\r\n    return (\r\n        <input \r\n            value={listeTitle} \r\n            onChange={\r\n                (event: ChangeEvent<HTMLInputElement>) => { \r\n                    setTitle(event.target.value)\r\n                }\r\n            }\r\n            disabled={!isUpdatingTitle}\r\n            onClick={test}/>\r\n    )\r\n};\r\n\r\nexport default ListeTitle;"]},"metadata":{},"sourceType":"module"}