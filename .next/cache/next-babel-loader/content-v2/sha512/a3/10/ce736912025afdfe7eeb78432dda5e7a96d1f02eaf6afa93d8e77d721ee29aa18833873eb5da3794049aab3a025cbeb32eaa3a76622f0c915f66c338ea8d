{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\components\\\\ListeTitle.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nvar ListeTitle = function ListeTitle(_ref) {\n  _s();\n\n  var title = _ref.title;\n\n  var _useState = useState(false),\n      isUpdatingTitle = _useState[0],\n      toggleUpdating = _useState[1];\n\n  var _useState2 = useState(title),\n      listeTitle = _useState2[0],\n      setTitle = _useState2[1];\n\n  var onValidate = function onValidate(event) {\n    if (event.key === \"Enter\") {\n      toggleUpdating(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isUpdatingTitle && /*#__PURE__*/_jsxDEV(\"input\", {\n      value: listeTitle,\n      onChange: function onChange(event) {\n        setTitle(event.target.value);\n      },\n      onKeyPress: function onKeyPress(event) {\n        onValidate(event);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, _this), !isUpdatingTitle && /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: function onClick() {\n        return toggleUpdating(true);\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ListeTitle, \"HGlJKtKktt9v3c1kSaZeiC5VTU4=\");\n\n_c = ListeTitle;\nexport default ListeTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListeTitle\");","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/components/ListeTitle.tsx"],"names":["useState","ListeTitle","title","isUpdatingTitle","toggleUpdating","listeTitle","setTitle","onValidate","event","key","target","value"],"mappings":";;;;;;;AAAA,SAAwDA,QAAxD,QAAwE,OAAxE;;AAMA,IAAMC,UAA+C,GAAG,SAAlDA,UAAkD,OAAa;AAAA;;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAAA,kBACvBF,QAAQ,CAAC,KAAD,CADe;AAAA,MAC1DG,eAD0D;AAAA,MACzCC,cADyC;;AAAA,mBAElCJ,QAAQ,CAACE,KAAD,CAF0B;AAAA,MAE1DG,UAF0D;AAAA,MAE9CC,QAF8C;;AAIjE,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAA0B;AACzC,QAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAAyB;AACrBL,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GAJD;;AAMA,sBACI;AAAA,eACID,eAAe,iBACf;AACA,MAAA,KAAK,EAAEE,UADP;AAEA,MAAA,QAAQ,EACJ,kBAACG,KAAD,EAA0C;AACtCF,QAAAA,QAAQ,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR;AACH,OALL;AAOA,MAAA,UAAU,EACN,oBAACH,KAAD,EAA0B;AACtBD,QAAAA,UAAU,CAACC,KAAD,CAAV;AACH;AAVL;AAAA;AAAA;AAAA;AAAA,aAFJ,EAgBI,CAACL,eAAD,iBACA;AAAM,MAAA,OAAO,EAAE;AAAA,eAAMC,cAAc,CAAC,IAAD,CAApB;AAAA,OAAf;AAAA,gBAA6CF;AAA7C;AAAA;AAAA;AAAA;AAAA,aAjBJ;AAAA,kBADJ;AAsBH,CAhCD;;GAAMD,U;;KAAAA,U;AAkCN,eAAeA,UAAf","sourcesContent":["import { ChangeEvent, FunctionComponent, KeyboardEvent, useState } from \"react\";\r\n\r\ninterface IListeTitleProps{\r\n    title: string\r\n}\r\n\r\nconst ListeTitle: FunctionComponent<IListeTitleProps> = ({title}) => {\r\n    const [isUpdatingTitle, toggleUpdating] = useState(false);\r\n    const [listeTitle, setTitle] = useState(title);\r\n\r\n    const onValidate = (event: KeyboardEvent) => {\r\n        if(event.key === \"Enter\"){\r\n            toggleUpdating(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>  \r\n        {   isUpdatingTitle &&\r\n            <input \r\n            value={listeTitle} \r\n            onChange={\r\n                (event: ChangeEvent<HTMLInputElement>) => { \r\n                    setTitle(event.target.value);\r\n                }\r\n            }\r\n            onKeyPress={\r\n                (event: KeyboardEvent) => {\r\n                    onValidate(event);\r\n                }\r\n            }/>\r\n        }\r\n        {\r\n            !isUpdatingTitle &&\r\n            <span onClick={() => toggleUpdating(true)}>{ title }</span>\r\n        }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ListeTitle;"]},"metadata":{},"sourceType":"module"}