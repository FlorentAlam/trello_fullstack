{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\components\\\\ListeTitle.tsx\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { UPDATE_LISTE_URL } from \"../utils/api_endpoints\";\n\nconst ListeTitle = ({\n  title\n}) => {\n  const {\n    0: isUpdatingTitle,\n    1: toggleUpdating\n  } = useState(false);\n  const {\n    0: listeTitle,\n    1: setTitle\n  } = useState(title);\n\n  const onValidate = event => {\n    if (event.key === \"Enter\") {\n      toggleUpdating(false);\n    }\n  };\n\n  const updateName = async () => {\n    let res = await axios.put(UPDATE_LISTE_URL, {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isUpdatingTitle && /*#__PURE__*/_jsxDEV(\"input\", {\n      value: listeTitle,\n      onChange: event => {\n        setTitle(event.target.value);\n      },\n      onKeyPress: event => {\n        onValidate(event);\n      },\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), !isUpdatingTitle && /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => toggleUpdating(true),\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport default ListeTitle;","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/components/ListeTitle.tsx"],"names":["axios","useState","UPDATE_LISTE_URL","ListeTitle","title","isUpdatingTitle","toggleUpdating","listeTitle","setTitle","onValidate","event","key","updateName","res","put","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAwDC,QAAxD,QAAwE,OAAxE;AACA,SAASC,gBAAT,QAAiC,wBAAjC;;AAOA,MAAMC,UAA+C,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACjE,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAAoCL,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAACM,UAAD;AAAA,OAAaC;AAAb,MAAyBP,QAAQ,CAACG,KAAD,CAAvC;;AAEA,QAAMK,UAAU,GAAIC,KAAD,IAA0B;AACzC,QAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAAyB;AACrBL,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GAJD;;AAMA,QAAMM,UAAU,GAAG,YAAY;AAC3B,QAAIC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUZ,gBAAV,EAA4B,EAA5B,CAAhB;AAGH,GAJD;;AAMA,sBACI;AAAA,eACIG,eAAe,iBACf;AACA,MAAA,KAAK,EAAEE,UADP;AAEA,MAAA,QAAQ,EACHG,KAAD,IAA0C;AACtCF,QAAAA,QAAQ,CAACE,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAR;AACH,OALL;AAOA,MAAA,UAAU,EACLN,KAAD,IAA0B;AACtBD,QAAAA,UAAU,CAACC,KAAD,CAAV;AACH,OAVL;AAYA,MAAA,SAAS;AAZT;AAAA;AAAA;AAAA;AAAA,YAFJ,EAiBI,CAACL,eAAD,iBACA;AAAM,MAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,IAAD,CAAnC;AAAA,gBAA6CF;AAA7C;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA,kBADJ;AAuBH,CAvCD;;AAyCA,eAAeD,UAAf","sourcesContent":["import axios from \"axios\";\r\nimport { ChangeEvent, FunctionComponent, KeyboardEvent, useState } from \"react\";\r\nimport { UPDATE_LISTE_URL } from \"../utils/api_endpoints\";\r\n\r\ninterface IListeTitleProps{\r\n    title: string,\r\n    liste_id: number\r\n}\r\n\r\nconst ListeTitle: FunctionComponent<IListeTitleProps> = ({title}) => {\r\n    const [isUpdatingTitle, toggleUpdating] = useState(false);\r\n    const [listeTitle, setTitle] = useState(title);\r\n\r\n    const onValidate = (event: KeyboardEvent) => {\r\n        if(event.key === \"Enter\"){\r\n            toggleUpdating(false);\r\n        }\r\n    }\r\n\r\n    const updateName = async () => {\r\n        let res = await axios.put(UPDATE_LISTE_URL, {\r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <>  \r\n        {   isUpdatingTitle &&\r\n            <input \r\n            value={listeTitle} \r\n            onChange={\r\n                (event: ChangeEvent<HTMLInputElement>) => { \r\n                    setTitle(event.target.value);\r\n                }\r\n            }\r\n            onKeyPress={\r\n                (event: KeyboardEvent) => {\r\n                    onValidate(event);\r\n                }\r\n            }\r\n            autoFocus/>\r\n        }\r\n        {\r\n            !isUpdatingTitle &&\r\n            <span onClick={() => toggleUpdating(true)}>{ title }</span>\r\n        }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ListeTitle;"]},"metadata":{},"sourceType":"module"}