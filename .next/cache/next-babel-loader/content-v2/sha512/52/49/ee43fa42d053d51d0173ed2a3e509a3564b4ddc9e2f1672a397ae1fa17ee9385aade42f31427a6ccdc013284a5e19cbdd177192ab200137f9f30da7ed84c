{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\components\\\\ListeTitle.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nvar ListeTitle = function ListeTitle(_ref) {\n  _s();\n\n  var title = _ref.title;\n\n  var _useState = useState(false),\n      isUpdatingTitle = _useState[0],\n      toggleUpdating = _useState[1];\n\n  var _useState2 = useState(title),\n      listeTitle = _useState2[0],\n      setTitle = _useState2[1];\n\n  var onValidate = function onValidate() {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isUpdatingTitle && /*#__PURE__*/_jsxDEV(\"input\", {\n      value: listeTitle,\n      onClick: test,\n      onChange: function onChange(event) {\n        setTitle(event.target.value);\n      },\n      onKeyPress: onValidate,\n      disabled: !isUpdatingTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, _this), !isUpdatingTitle && /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: function onClick() {\n        return toggleUpdating(!isUpdatingTitle);\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ListeTitle, \"HGlJKtKktt9v3c1kSaZeiC5VTU4=\");\n\n_c = ListeTitle;\nexport default ListeTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListeTitle\");","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/components/ListeTitle.tsx"],"names":["useState","ListeTitle","title","isUpdatingTitle","toggleUpdating","listeTitle","setTitle","onValidate","test","event","target","value"],"mappings":";;;;;;;AAAA,SAAyCA,QAAzC,QAAyD,OAAzD;;AAMA,IAAMC,UAA+C,GAAG,SAAlDA,UAAkD,OAAa;AAAA;;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAAA,kBACvBF,QAAQ,CAAC,KAAD,CADe;AAAA,MAC1DG,eAD0D;AAAA,MACzCC,cADyC;;AAAA,mBAElCJ,QAAQ,CAACE,KAAD,CAF0B;AAAA,MAE1DG,UAF0D;AAAA,MAE9CC,QAF8C;;AAIjE,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM,CAExB,CAFD;;AAIA,sBACI;AAAA,eACIJ,eAAe,iBACf;AACA,MAAA,KAAK,EAAEE,UADP;AAEA,MAAA,OAAO,EAAEG,IAFT;AAGA,MAAA,QAAQ,EACJ,kBAACC,KAAD,EAA0C;AACtCH,QAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACH,OANL;AAQA,MAAA,UAAU,EAAGJ,UARb;AASA,MAAA,QAAQ,EAAE,CAACJ;AATX;AAAA;AAAA;AAAA;AAAA,aAFJ,EAcI,CAACA,eAAD,iBACA;AAAM,MAAA,OAAO,EAAE;AAAA,eAAMC,cAAc,CAAC,CAACD,eAAF,CAApB;AAAA,OAAf;AAAA,gBAAyDD;AAAzD;AAAA;AAAA;AAAA;AAAA,aAfJ;AAAA,kBADJ;AAoBH,CA5BD;;GAAMD,U;;KAAAA,U;AA8BN,eAAeA,UAAf","sourcesContent":["import { ChangeEvent, FunctionComponent, useState } from \"react\";\r\n\r\ninterface IListeTitleProps{\r\n    title: string\r\n}\r\n\r\nconst ListeTitle: FunctionComponent<IListeTitleProps> = ({title}) => {\r\n    const [isUpdatingTitle, toggleUpdating] = useState(false);\r\n    const [listeTitle, setTitle] = useState(title);\r\n\r\n    const onValidate = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <>  \r\n        {   isUpdatingTitle &&\r\n            <input \r\n            value={listeTitle} \r\n            onClick={test}\r\n            onChange={\r\n                (event: ChangeEvent<HTMLInputElement>) => { \r\n                    setTitle(event.target.value)\r\n                }\r\n            }\r\n            onKeyPress={ onValidate }\r\n            disabled={!isUpdatingTitle} />\r\n        }\r\n        {\r\n            !isUpdatingTitle &&\r\n            <span onClick={() => toggleUpdating(!isUpdatingTitle)}>{ title }</span>\r\n        }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ListeTitle;"]},"metadata":{},"sourceType":"module"}