{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Florent/Desktop/trello/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"C:/Users/Florent/Desktop/trello/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/Users/Florent/Desktop/trello/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\components\\\\Liste.tsx\",\n    _this = this;\n\nimport axios from \"axios\";\nimport { CREATE_CARTE_URL } from \"../utils/api_endpoints\";\nimport AddItem from \"./AddItem\";\nimport Carte from \"./Carte\";\n\nvar Liste = function Liste(_ref) {\n  var listeName = _ref.listeName,\n      cartes = _ref.cartes,\n      liste_id = _ref.liste_id;\n\n  var onAddCarte = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(carteName) {\n      var result, newListe;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return apiAddCarte(carteName);\n\n            case 2:\n              result = _context.sent;\n\n              if (result) {\n                newListe = _toConsumableArray(cartes);\n                newListe.push({\n                  id: result[0],\n                  name: carteName\n                });\n                setCartes(newListe);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onAddCarte(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var apiAddCarte = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(carteName) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post(CREATE_CARTE_URL, {\n                name: carteName,\n                liste_id: liste_id\n              });\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.status === 400)) {\n                _context2.next = 6;\n                break;\n              }\n\n              throw new Error('Erreur lors de la création de la carte.');\n\n            case 6:\n              return _context2.abrupt(\"return\", result.data);\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", false);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function apiAddCarte(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"liste\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: listeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this), cartes.map(function (carte, index) {\n      return /*#__PURE__*/_jsxDEV(Carte, {\n        name: carte\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(AddItem, {\n      onSubmit: onAddCarte,\n      buttonName: \"Ajouter une carte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Liste;\nexport default Liste;\n\nvar _c;\n\n$RefreshReg$(_c, \"Liste\");","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/components/Liste.tsx"],"names":["axios","CREATE_CARTE_URL","AddItem","Carte","Liste","listeName","cartes","liste_id","onAddCarte","carteName","apiAddCarte","result","newListe","push","id","name","setCartes","post","status","Error","data","map","carte","index"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAcA,IAAMC,KAAqC,GAAG,SAAxCA,KAAwC,OAAqC;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC/E,MAAMC,UAAU;AAAA,yEAAG,iBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMC,WAAW,CAACD,SAAD,CADjB;;AAAA;AACTE,cAAAA,MADS;;AAEf,kBAAGA,MAAH,EAAU;AACAC,gBAAAA,QADA,sBACeN,MADf;AAENM,gBAAAA,QAAQ,CAACC,IAAT,CAAc;AAACC,kBAAAA,EAAE,EAAEH,MAAM,CAAC,CAAD,CAAX;AAAgBI,kBAAAA,IAAI,EAAEN;AAAtB,iBAAd;AACAO,gBAAAA,SAAS,CAACJ,QAAD,CAAT;AACH;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVJ,UAAU;AAAA;AAAA;AAAA,KAAhB;;AASA,MAAME,WAAW;AAAA,yEAAG,kBAAMD,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEST,KAAK,CAACiB,IAAN,CAAWhB,gBAAX,EAA6B;AAC9Cc,gBAAAA,IAAI,EAAEN,SADwC;AAE9CF,gBAAAA,QAAQ,EAARA;AAF8C,eAA7B,CAFT;;AAAA;AAENI,cAAAA,MAFM;;AAAA,oBAMTA,MAAM,CAACO,MAAP,KAAkB,GANT;AAAA;AAAA;AAAA;;AAAA,oBAMoB,IAAIC,KAAJ,CAAU,yCAAV,CANpB;;AAAA;AAAA,gDAOLR,MAAM,CAACS,IAPF;;AAAA;AAAA;AAAA;AAAA,gDASL,KATK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXV,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAA,gBAAML;AAAN;AAAA;AAAA;AAAA;AAAA,aADJ,EAEKC,MAAM,CAACe,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR;AAAA,0BACR,QAAC,KAAD;AAAmB,QAAA,IAAI,EAAED;AAAzB,SAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA,eADQ;AAAA,KAAX,CAFL,eAKI,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEf,UAAnB;AAA+B,MAAA,UAAU,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CAhCD;;KAAMJ,K;AAkCN,eAAeA,KAAf","sourcesContent":["import axios from \"axios\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { CREATE_CARTE_URL } from \"../utils/api_endpoints\";\r\nimport AddItem from \"./AddItem\";\r\nimport Carte from \"./Carte\";\r\n\r\n\r\ninterface ICartes{\r\n    id: number,\r\n    name: string\r\n}\r\n\r\ninterface IListeProps{\r\n    listeName: string,\r\n    liste_id: number,\r\n    cartes: ICartes[]\r\n}\r\n\r\nconst Liste: FunctionComponent<IListeProps> = ({ listeName, cartes, liste_id }) => {\r\n    const onAddCarte = async (carteName: string) => {\r\n        const result = await apiAddCarte(carteName);\r\n        if(result){\r\n            const newListe = [...cartes];\r\n            newListe.push({id: result[0], name: carteName});\r\n            setCartes(newListe);\r\n        }\r\n    }\r\n\r\n    const apiAddCarte = async(carteName: string) => {\r\n        try{\r\n            const result = await axios.post(CREATE_CARTE_URL, {\r\n                name: carteName,\r\n                liste_id\r\n            });\r\n            if(result.status === 400) throw new Error('Erreur lors de la création de la carte.');\r\n            return result.data;\r\n        } catch(e){\r\n            return false;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"liste\">\r\n            <h1>{ listeName }</h1>\r\n            {cartes.map((carte, index) => (\r\n                <Carte key={index} name={carte}/>\r\n            ))}\r\n            <AddItem onSubmit={onAddCarte} buttonName=\"Ajouter une carte\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Liste;"]},"metadata":{},"sourceType":"module"}