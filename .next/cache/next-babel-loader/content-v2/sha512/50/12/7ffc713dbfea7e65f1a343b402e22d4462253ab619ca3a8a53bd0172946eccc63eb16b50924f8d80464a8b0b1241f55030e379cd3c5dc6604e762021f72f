{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\components\\\\Liste.tsx\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { CREATE_CARTE_URL, GET_CARTES_URL } from \"../utils/api_endpoints\";\nimport AddItem from \"./AddItem\";\nimport Carte from \"./Carte\";\nimport ListeTitle from \"./ListeTitle\";\n\nconst Liste = ({\n  listeName,\n  liste_id\n}) => {\n  const {\n    0: cartes,\n    1: setCartes\n  } = useState([]);\n  useEffect(() => {\n    fetchCartes();\n  }, []);\n\n  const fetchCartes = async () => {\n    const response = await axios.get(GET_CARTES_URL(liste_id));\n    const data = response.data;\n    setCartes(data);\n  };\n\n  const onAddCarte = async carteName => {\n    const result = await apiAddCarte(carteName);\n\n    if (result) {\n      const newListe = [...cartes];\n      newListe.push({\n        id: result[0],\n        name: carteName\n      });\n      setCartes(newListe);\n    }\n  };\n\n  const apiAddCarte = async carteName => {\n    try {\n      const result = await axios.post(CREATE_CARTE_URL, {\n        name: carteName,\n        liste_id\n      });\n      if (result.status === 400) throw new Error('Erreur lors de la création de la carte.');\n      return result.data;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"liste\",\n    children: [/*#__PURE__*/_jsxDEV(ListeTitle, {\n      title: listeName,\n      liste_id: liste_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), cartes.map(carte => /*#__PURE__*/_jsxDEV(Carte, {\n      name: carte.name\n    }, carte.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(AddItem, {\n      onSubmit: onAddCarte,\n      buttonName: \"Ajouter une carte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Liste;","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/components/Liste.tsx"],"names":["axios","useEffect","useState","CREATE_CARTE_URL","GET_CARTES_URL","AddItem","Carte","ListeTitle","Liste","listeName","liste_id","cartes","setCartes","fetchCartes","response","get","data","onAddCarte","carteName","result","apiAddCarte","newListe","push","id","name","post","status","Error","e","map","carte"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,wBAAjD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAYA,MAAMC,KAAqC,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAEvE,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUX,cAAc,CAACM,QAAD,CAAxB,CAAvB;AACA,UAAMM,IAAc,GAAGF,QAAQ,CAACE,IAAhC;AACAJ,IAAAA,SAAS,CAACI,IAAD,CAAT;AACH,GAJD;;AAMA,QAAMC,UAAU,GAAG,MAAOC,SAAP,IAA6B;AAC5C,UAAMC,MAAM,GAAG,MAAMC,WAAW,CAACF,SAAD,CAAhC;;AACA,QAAGC,MAAH,EAAU;AACN,YAAME,QAAQ,GAAG,CAAC,GAAGV,MAAJ,CAAjB;AACAU,MAAAA,QAAQ,CAACC,IAAT,CAAc;AAACC,QAAAA,EAAE,EAAEJ,MAAM,CAAC,CAAD,CAAX;AAAgBK,QAAAA,IAAI,EAAEN;AAAtB,OAAd;AACAN,MAAAA,SAAS,CAACS,QAAD,CAAT;AACH;AACJ,GAPD;;AASA,QAAMD,WAAW,GAAG,MAAMF,SAAN,IAA4B;AAC5C,QAAG;AACC,YAAMC,MAAM,GAAG,MAAMnB,KAAK,CAACyB,IAAN,CAAWtB,gBAAX,EAA6B;AAC9CqB,QAAAA,IAAI,EAAEN,SADwC;AAE9CR,QAAAA;AAF8C,OAA7B,CAArB;AAIA,UAAGS,MAAM,CAACO,MAAP,KAAkB,GAArB,EAA0B,MAAM,IAAIC,KAAJ,CAAU,yCAAV,CAAN;AAC1B,aAAOR,MAAM,CAACH,IAAd;AACH,KAPD,CAOE,OAAMY,CAAN,EAAQ;AACN,aAAO,KAAP;AACH;AACJ,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAGnB,SAApB;AAAgC,MAAA,QAAQ,EAAGC;AAA3C;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,MAAM,CAACkB,GAAP,CAAYC,KAAD,iBACR,QAAC,KAAD;AAAsB,MAAA,IAAI,EAAEA,KAAK,CAACN;AAAlC,OAAYM,KAAK,CAACP,EAAlB;AAAA;AAAA;AAAA;AAAA,YADH,CAFL,eAKI,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEN,UAAnB;AAA+B,MAAA,UAAU,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA7CD;;AA+CA,eAAeT,KAAf","sourcesContent":["import axios from \"axios\";\r\nimport { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { CREATE_CARTE_URL, GET_CARTES_URL } from \"../utils/api_endpoints\";\r\nimport AddItem from \"./AddItem\";\r\nimport Carte from \"./Carte\";\r\nimport ListeTitle from \"./ListeTitle\";\r\n\r\ninterface ICarte{\r\n    id: number,\r\n    name: string\r\n}\r\n\r\ninterface IListeProps{\r\n    listeName: string,\r\n    liste_id: number\r\n}\r\n\r\nconst Liste: FunctionComponent<IListeProps> = ({ listeName, liste_id }) => {\r\n\r\n    const [cartes, setCartes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchCartes();\r\n    }, [])\r\n\r\n    const fetchCartes = async () => {\r\n        const response = await axios.get(GET_CARTES_URL(liste_id));\r\n        const data: ICarte[] = response.data;\r\n        setCartes(data);\r\n    }\r\n\r\n    const onAddCarte = async (carteName: string) => {\r\n        const result = await apiAddCarte(carteName);\r\n        if(result){\r\n            const newListe = [...cartes];\r\n            newListe.push({id: result[0], name: carteName});\r\n            setCartes(newListe);\r\n        }\r\n    }\r\n\r\n    const apiAddCarte = async(carteName: string) => {\r\n        try{\r\n            const result = await axios.post(CREATE_CARTE_URL, {\r\n                name: carteName,\r\n                liste_id\r\n            });\r\n            if(result.status === 400) throw new Error('Erreur lors de la création de la carte.');\r\n            return result.data;\r\n        } catch(e){\r\n            return false;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"liste\">\r\n            <ListeTitle title={ listeName } liste_id={ liste_id }/>\r\n            {cartes.map((carte) => (\r\n                <Carte key={carte.id} name={carte.name}/>\r\n            ))}\r\n            <AddItem onSubmit={onAddCarte} buttonName=\"Ajouter une carte\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Liste;"]},"metadata":{},"sourceType":"module"}