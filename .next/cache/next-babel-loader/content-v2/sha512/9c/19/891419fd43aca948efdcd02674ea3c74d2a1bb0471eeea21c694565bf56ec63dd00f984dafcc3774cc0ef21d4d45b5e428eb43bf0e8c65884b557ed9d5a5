{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\pages\\\\connexion.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Fieldset from \"../components/Fieldset\";\nimport Form from \"../components/Form\";\n\nvar Connexion = function Connexion() {\n  _s();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      buttonName: \"test\",\n      submitAction: function submitAction() {},\n      children: [/*#__PURE__*/_jsxDEV(Fieldset, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        onChange: function onChange(event) {\n          setEmail(event.target.value);\n        },\n        label: \"Adresse email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Fieldset, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: function onChange(event) {\n          setPassword(event.target.value);\n        },\n        label: \"Mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Connexion, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n\n_c = Connexion;\nexport default Connexion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connexion\");","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/pages/connexion.tsx"],"names":["useState","Fieldset","Form","Connexion","email","setEmail","password","setPassword","event","target","value"],"mappings":";;;;;;;AAAA,SAAwBA,QAAxB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBACMH,QAAQ,CAAC,EAAD,CADd;AAAA,MACbI,KADa;AAAA,MACNC,QADM;;AAAA,mBAEYL,QAAQ,CAAC,EAAD,CAFpB;AAAA,MAEbM,QAFa;AAAA,MAEHC,WAFG;;AAIpB,sBACA;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,MAAjB;AAAwB,MAAA,YAAY,EAAE,wBAAM,CAAE,CAA9C;AAAA,8BACI,QAAC,QAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,KAAK,EAAEH,KAHX;AAII,QAAA,QAAQ,EAAE,kBAACI,KAAD,EAAyB;AAAEH,UAAAA,QAAQ,CAAEG,KAAK,CAACC,MAAP,CAAmCC,KAApC,CAAR;AAAmD,SAJ5F;AAKI,QAAA,KAAK,EAAC;AALV;AAAA;AAAA;AAAA;AAAA,eADJ,eAQI,QAAC,QAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAEJ,QAHX;AAII,QAAA,QAAQ,EAAE,kBAACE,KAAD,EAAyB;AAAED,UAAAA,WAAW,CAAEC,KAAK,CAACC,MAAP,CAAmCC,KAApC,CAAX;AAAsD,SAJ/F;AAKI,QAAA,KAAK,EAAC;AALV;AAAA;AAAA;AAAA;AAAA,eARJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADA;AAoBF,CAxBF;;GAAMP,S;;KAAAA,S;AA0BN,eAAeA,SAAf","sourcesContent":["import { KeyboardEvent, useState } from \"react\";\r\nimport Fieldset from \"../components/Fieldset\";\r\nimport Form from \"../components/Form\";\r\n\r\nconst Connexion = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    return (\r\n    <>\r\n        <Form buttonName=\"test\" submitAction={() => {}}>\r\n            <Fieldset \r\n                name=\"email\" \r\n                type=\"email\" \r\n                value={email} \r\n                onChange={(event:KeyboardEvent) => { setEmail((event.target as HTMLInputElement).value)} }\r\n                label=\"Adresse email\"\r\n            />\r\n            <Fieldset \r\n                name=\"password\" \r\n                type=\"password\" \r\n                value={password} \r\n                onChange={(event:KeyboardEvent) => { setPassword((event.target as HTMLInputElement).value)} }\r\n                label=\"Mot de passe\"\r\n            />\r\n            <div>connexion</div>\r\n        </Form>\r\n    </>\r\n)};\r\n\r\nexport default Connexion;"]},"metadata":{},"sourceType":"module"}