{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\components\\\\ListeTitle.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nvar ListeTitle = function ListeTitle(_ref) {\n  _s();\n\n  var title = _ref.title;\n\n  var _useState = useState(false),\n      isUpdatingTitle = _useState[0],\n      toggleUpdating = _useState[1];\n\n  var _useState2 = useState(title),\n      listeTitle = _useState2[0],\n      setTitle = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: listeTitle,\n    onChange: function onChange(event) {\n      setTitle(event.target.value);\n    },\n    disabled: !isUpdatingTitle,\n    onClick: function onClick() {\n      return toggleUpdating(!isUpdatingTitle);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ListeTitle, \"HGlJKtKktt9v3c1kSaZeiC5VTU4=\");\n\n_c = ListeTitle;\nexport default ListeTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListeTitle\");","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/components/ListeTitle.tsx"],"names":["useState","ListeTitle","title","isUpdatingTitle","toggleUpdating","listeTitle","setTitle","event","target","value"],"mappings":";;;;;;AAAA,SAAyCA,QAAzC,QAAyD,OAAzD;;AAMA,IAAMC,UAA+C,GAAG,SAAlDA,UAAkD,OAAa;AAAA;;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAAA,kBACvBF,QAAQ,CAAC,KAAD,CADe;AAAA,MAC1DG,eAD0D;AAAA,MACzCC,cADyC;;AAAA,mBAElCJ,QAAQ,CAACE,KAAD,CAF0B;AAAA,MAE1DG,UAF0D;AAAA,MAE9CC,QAF8C;;AAIjE,sBACI;AACI,IAAA,KAAK,EAAED,UADX;AAEI,IAAA,QAAQ,EACJ,kBAACE,KAAD,EAA0C;AACtCD,MAAAA,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACH,KALT;AAOI,IAAA,QAAQ,EAAE,CAACN,eAPf;AAQI,IAAA,OAAO,EAAE;AAAA,aAAMC,cAAc,CAAC,CAACD,eAAF,CAApB;AAAA;AARb;AAAA;AAAA;AAAA;AAAA,WADJ;AAWH,CAfD;;GAAMF,U;;KAAAA,U;AAiBN,eAAeA,UAAf","sourcesContent":["import { ChangeEvent, FunctionComponent, useState } from \"react\";\r\n\r\ninterface IListeTitleProps{\r\n    title: string\r\n}\r\n\r\nconst ListeTitle: FunctionComponent<IListeTitleProps> = ({title}) => {\r\n    const [isUpdatingTitle, toggleUpdating] = useState(false);\r\n    const [listeTitle, setTitle] = useState(title);\r\n\r\n    return (\r\n        <input \r\n            value={listeTitle} \r\n            onChange={\r\n                (event: ChangeEvent<HTMLInputElement>) => { \r\n                    setTitle(event.target.value)\r\n                }\r\n            }\r\n            disabled={!isUpdatingTitle}\r\n            onClick={() => toggleUpdating(!isUpdatingTitle)}/>\r\n    )\r\n};\r\n\r\nexport default ListeTitle;"]},"metadata":{},"sourceType":"module"}