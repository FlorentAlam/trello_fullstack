{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\components\\\\AddItem.tsx\";\nimport { useState } from \"react\";\n\nconst AddItem = ({\n  onSubmit,\n  buttonName\n}) => {\n  const {\n    0: isAddingItem,\n    1: toggleAddItem\n  } = useState(false);\n  const {\n    0: itemName,\n    1: setItemName\n  } = useState('');\n\n  const onKeyPressed = event => {\n    if (event.key === 'Enter') {\n      onSubmit(itemName);\n      toggleAddItem(false);\n      setItemName('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isAddingItem && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: itemName,\n      onKeyPress: event => {\n        onKeyPressed(event);\n      },\n      onChange: event => setItemName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 30\n    }, this), !isAddingItem && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => toggleAddItem(!isAddingItem),\n      children: buttonName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true);\n};\n\nexport default AddItem;","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/components/AddItem.tsx"],"names":["useState","AddItem","onSubmit","buttonName","isAddingItem","toggleAddItem","itemName","setItemName","onKeyPressed","event","key","target","value"],"mappings":";;;AAAA,SAA4BA,QAA5B,QAAwE,OAAxE;;AAOA,MAAMC,OAAyC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA8B;AAC5E,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAgCL,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAA0B;AAC3C,QAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAAyB;AACrBR,MAAAA,QAAQ,CAACI,QAAD,CAAR;AACAD,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ,GAND;;AAQA,sBACI;AAAA,eACKH,YAAY,iBAAI;AACb,MAAA,IAAI,EAAC,MADQ;AAEb,MAAA,KAAK,EAAEE,QAFM;AAGb,MAAA,UAAU,EAAGG,KAAD,IAAyB;AAACD,QAAAA,YAAY,CAACC,KAAD,CAAZ;AAAoB,OAH7C;AAIb,MAAA,QAAQ,EAAGA,KAAD,IAAyCF,WAAW,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd;AAJjD;AAAA;AAAA;AAAA;AAAA,YADrB,EAMM,CAACR,YAAD,iBAAiB;AAAQ,MAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,CAACD,YAAF,CAApC;AAAA,gBAAuDD;AAAvD;AAAA;AAAA;AAAA;AAAA,YANvB;AAAA,kBADJ;AAWH,CAvBD;;AAyBA,eAAeF,OAAf","sourcesContent":["import { FunctionComponent, useState, KeyboardEvent, ChangeEvent } from \"react\";\r\n\r\ninterface IAddItemProps{\r\n    onSubmit: (itemName: string) => void,\r\n    buttonName: string\r\n}\r\n\r\nconst AddItem: FunctionComponent<IAddItemProps> = ({ onSubmit, buttonName }) => {\r\n    const [isAddingItem, toggleAddItem] = useState(false);\r\n    const [itemName, setItemName] = useState('');\r\n\r\n    const onKeyPressed = (event: KeyboardEvent) => {\r\n        if(event.key === 'Enter'){\r\n            onSubmit(itemName);\r\n            toggleAddItem(false);\r\n            setItemName('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isAddingItem && <input \r\n                type='text' \r\n                value={itemName} \r\n                onKeyPress={(event:KeyboardEvent) => {onKeyPressed(event)}} \r\n                onChange={(event:ChangeEvent<HTMLInputElement>) => setItemName(event.target.value)}/>}\r\n            { !isAddingItem && <button onClick={() => toggleAddItem(!isAddingItem)}>{ buttonName }</button> }\r\n            \r\n        </>\r\n    )\r\n};\r\n\r\nexport default AddItem;"]},"metadata":{},"sourceType":"module"}