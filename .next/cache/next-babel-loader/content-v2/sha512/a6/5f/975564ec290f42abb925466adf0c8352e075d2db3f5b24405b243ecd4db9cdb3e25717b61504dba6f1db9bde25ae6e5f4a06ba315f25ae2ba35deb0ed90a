{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\components\\\\Fieldset.tsx\",\n    _this = this;\n\nvar Fieldset = function Fieldset(_ref) {\n  var name = _ref.name,\n      label = _ref.label,\n      type = _ref.type,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      _ref$placeholder = _ref.placeholder,\n      placeholder = _ref$placeholder === void 0 ? \"\" : _ref$placeholder;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      name: name,\n      id: name,\n      value: value,\n      onChange: onChange,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = Fieldset;\nexport default Fieldset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fieldset\");","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/components/Fieldset.tsx"],"names":["Fieldset","name","label","type","value","onChange","placeholder"],"mappings":";;;;;;AAWA,IAAMA,QAA2C,GAAI,SAA/CA,QAA+C;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,MAAgBC,IAAhB,QAAgBA,IAAhB;AAAA,MAAsBC,KAAtB,QAAsBA,KAAtB;AAAA,MAA6BC,QAA7B,QAA6BA,QAA7B;AAAA,8BAAuCC,WAAvC;AAAA,MAAuCA,WAAvC,iCAAqD,EAArD;AAAA,sBACjD;AAAA,4BACI;AAAO,MAAA,OAAO,EAAGL,IAAjB;AAAA,gBAA0BC;AAA1B;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACI,MAAA,IAAI,EAAGC,IADX;AAEI,MAAA,IAAI,EAAGF,IAFX;AAGI,MAAA,EAAE,EAAGA,IAHT;AAII,MAAA,KAAK,EAAGG,KAJZ;AAKI,MAAA,QAAQ,EAAGC,QALf;AAMI,MAAA,WAAW,EAAEC;AANjB;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA,kBADiD;AAAA,CAArD;;KAAMN,Q;AAcN,eAAeA,QAAf","sourcesContent":["import { FunctionComponent, KeyboardEvent } from \"react\";\r\n\r\ninterface IFieldsetProps{\r\n    name: string,\r\n    label: string,\r\n    type: string,\r\n    value: string,\r\n    onChange: (event:KeyboardEvent)=>void,\r\n    placeholder ?: string\r\n}\r\n\r\nconst Fieldset: FunctionComponent<IFieldsetProps>  = ({ name, label, type, value, onChange, placeholder = \"\" }) => (\r\n    <>\r\n        <label htmlFor={ name }>{ label }</label>\r\n        <input \r\n            type={ type } \r\n            name={ name } \r\n            id={ name } \r\n            value={ value } \r\n            onChange={ onChange } \r\n            placeholder={placeholder}\r\n        />\r\n    </>\r\n);\r\n\r\nexport default Fieldset;"]},"metadata":{},"sourceType":"module"}