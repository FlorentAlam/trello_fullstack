{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\components\\\\AddListe.tsx\";\nimport { useState } from \"react\";\n\nconst AddListe = ({\n  onSubmit\n}) => {\n  const {\n    0: isAddingListe,\n    1: toggleAddListe\n  } = useState(false);\n  const {\n    0: listeName,\n    1: setListeName\n  } = useState('');\n\n  const onKeyPressed = event => {\n    if (event.key === 'Enter') {\n      onSubmit(listeName);\n      toggleAddListe(false);\n      setListeName('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isAddingListe && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: listeName,\n      onKeyPress: event => {\n        onKeyPressed(event);\n      },\n      onChange: event => setListeName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 31\n    }, this), !isAddingListe && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => toggleAddListe(!isAddingListe),\n      children: \"Ajouter une liste\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true);\n};\n\nexport default AddListe;","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/components/AddListe.tsx"],"names":["useState","AddListe","onSubmit","isAddingListe","toggleAddListe","listeName","setListeName","onKeyPressed","event","key","target","value"],"mappings":";;;AAAA,SAA4BA,QAA5B,QAAwE,OAAxE;;AAEA,MAAMC,QAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAClD,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAkCJ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMO,YAAY,GAAIC,KAAD,IAA0B;AAC3C,QAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAAyB;AACrBP,MAAAA,QAAQ,CAACG,SAAD,CAAR;AACAD,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACH;AACJ,GAND;;AAQA,sBACI;AAAA,eACKH,aAAa,iBAAI;AACd,MAAA,IAAI,EAAC,MADS;AAEd,MAAA,KAAK,EAAEE,SAFO;AAGd,MAAA,UAAU,EAAGG,KAAD,IAAyB;AAACD,QAAAA,YAAY,CAACC,KAAD,CAAZ;AAAoB,OAH5C;AAId,MAAA,QAAQ,EAAGA,KAAD,IAAyCF,YAAY,CAACE,KAAK,CAACE,MAAN,CAAaC,KAAd;AAJjD;AAAA;AAAA;AAAA;AAAA,YADtB,EAMM,CAACR,aAAD,iBAAkB;AAAQ,MAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,CAACD,aAAF,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANxB;AAAA,kBADJ;AAWH,CAvBD;;AAyBA,eAAeF,QAAf","sourcesContent":["import { FunctionComponent, useState, KeyboardEvent, ChangeEvent } from \"react\";\r\n\r\nconst AddListe: FunctionComponent = ({ onSubmit }) => {\r\n    const [isAddingListe, toggleAddListe] = useState(false);\r\n    const [listeName, setListeName] = useState('');\r\n\r\n    const onKeyPressed = (event: KeyboardEvent) => {\r\n        if(event.key === 'Enter'){\r\n            onSubmit(listeName);\r\n            toggleAddListe(false);\r\n            setListeName('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isAddingListe && <input \r\n                type='text' \r\n                value={listeName} \r\n                onKeyPress={(event:KeyboardEvent) => {onKeyPressed(event)}} \r\n                onChange={(event:ChangeEvent<HTMLInputElement>) => setListeName(event.target.value)}/>}\r\n            { !isAddingListe && <button onClick={() => toggleAddListe(!isAddingListe)}>Ajouter une liste</button> }\r\n            \r\n        </>\r\n    )\r\n};\r\n\r\nexport default AddListe;"]},"metadata":{},"sourceType":"module"}