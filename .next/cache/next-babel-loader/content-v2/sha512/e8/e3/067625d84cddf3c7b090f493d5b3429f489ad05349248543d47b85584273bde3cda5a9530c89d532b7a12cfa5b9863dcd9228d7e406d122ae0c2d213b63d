{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\pages\\\\tableaux\\\\[id].tsx\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/dist/client/router\";\nimport { useEffect, useState } from \"react\";\nimport AddItem from \"../../components/AddItem\";\nimport Liste from \"../../components/Liste\";\n\nconst Tableau = () => {\n  const {\n    0: listes,\n    1: setListes\n  } = useState([]);\n  const {\n    0: vignettes,\n    1: setVignettes\n  } = useState([[\"bouark\", \"bloup\", \"champ\"], [\"bouark\", \"bloup\", \"champ\"], [\"bouark\", \"bloup\", \"champ\"]]);\n  const router = useRouter();\n  useEffect(() => {\n    fetchListes();\n  }, []);\n\n  const fetchListes = async () => {\n    const tableau_id = router.query.id;\n    const response = await axios.get(`http://localhost:3300/api/listes/${tableau_id}`);\n    const data = response.data;\n    console.log(data);\n    setListes(data);\n  };\n\n  const onAddListe = async listeName => {\n    const result = await apiAddListe(listeName);\n\n    if (result) {\n      const newListe = [...listes];\n      newListe.push({\n        id: result[0],\n        name: listeName\n      });\n      setListes(newListe);\n    }\n  };\n\n  const apiAddListe = async listeName => {\n    const tableau_id = router.query.id;\n\n    try {\n      const result = await axios.post('http://localhost:3300/api/listes/new', {\n        name: listeName,\n        tableau_id\n      });\n      if (result.status === 400) throw new Error('Erreur lors de la création de la liste.');\n      return result.data;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tableau\",\n    children: [listes.map((liste, index) => /*#__PURE__*/_jsxDEV(Liste, {\n      name: liste.name,\n      cartes: vignettes[index]\n    }, liste.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(AddItem, {\n      onSubmit: onAddListe,\n      buttonName: \"Ajouter une liste\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Tableau;","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/pages/tableaux/[id].tsx"],"names":["axios","useRouter","useEffect","useState","AddItem","Liste","Tableau","listes","setListes","vignettes","setVignettes","router","fetchListes","tableau_id","query","id","response","get","data","console","log","onAddListe","listeName","result","apiAddListe","newListe","push","name","post","status","Error","e","map","liste","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAOA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACM,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,CACvC,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,CADuC,EAEvC,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,CAFuC,EAGvC,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,CAHuC,CAAD,CAA1C;AAMA,QAAMQ,MAAM,GAAGV,SAAS,EAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAY;AAC5B,UAAMC,UAAU,GAAGF,MAAM,CAACG,KAAP,CAAaC,EAAhC;AACA,UAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,oCAAmCJ,UAAW,EAAzD,CAAvB;AACA,UAAMK,IAAc,GAAGF,QAAQ,CAACE,IAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAV,IAAAA,SAAS,CAACU,IAAD,CAAT;AACH,GAND;;AAQA,QAAMG,UAAU,GAAG,MAAOC,SAAP,IAA6B;AAC5C,UAAMC,MAAM,GAAG,MAAMC,WAAW,CAACF,SAAD,CAAhC;;AACA,QAAGC,MAAH,EAAU;AACN,YAAME,QAAQ,GAAG,CAAC,GAAGlB,MAAJ,CAAjB;AACAkB,MAAAA,QAAQ,CAACC,IAAT,CAAc;AAACX,QAAAA,EAAE,EAAEQ,MAAM,CAAC,CAAD,CAAX;AAAgBI,QAAAA,IAAI,EAAEL;AAAtB,OAAd;AACAd,MAAAA,SAAS,CAACiB,QAAD,CAAT;AACH;AACJ,GAPD;;AASA,QAAMD,WAAW,GAAG,MAAMF,SAAN,IAA4B;AAC5C,UAAMT,UAAU,GAAGF,MAAM,CAACG,KAAP,CAAaC,EAAhC;;AACA,QAAG;AACC,YAAMQ,MAAM,GAAG,MAAMvB,KAAK,CAAC4B,IAAN,CAAW,sCAAX,EAAmD;AACpED,QAAAA,IAAI,EAAEL,SAD8D;AAEpET,QAAAA;AAFoE,OAAnD,CAArB;AAIA,UAAGU,MAAM,CAACM,MAAP,KAAkB,GAArB,EAA0B,MAAM,IAAIC,KAAJ,CAAU,yCAAV,CAAN;AAC1B,aAAOP,MAAM,CAACL,IAAd;AACH,KAPD,CAOE,OAAMa,CAAN,EAAQ;AACN,aAAO,KAAP;AACH;AACJ,GAZD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,eACMxB,MAAM,CAACyB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACT,QAAC,KAAD;AAAsB,MAAA,IAAI,EAAED,KAAK,CAACN,IAAlC;AAAwC,MAAA,MAAM,EAAElB,SAAS,CAACyB,KAAD;AAAzD,OAAYD,KAAK,CAAClB,EAAlB;AAAA;AAAA;AAAA;AAAA,YADF,CADN,eAII,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEM,UAAnB;AAA+B,MAAA,UAAU,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CArDD;;AAuDA,eAAef,OAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useRouter } from \"next/dist/client/router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddItem from \"../../components/AddItem\";\r\nimport Liste from \"../../components/Liste\";\r\n\r\ninterface IListe{\r\n    tableau_id: number,\r\n    name: string\r\n}\r\n\r\nconst Tableau = () => {\r\n    const [listes, setListes] = useState([]);\r\n    const [vignettes, setVignettes] = useState([\r\n        [\"bouark\", \"bloup\", \"champ\"],\r\n        [\"bouark\", \"bloup\", \"champ\"],\r\n        [\"bouark\", \"bloup\", \"champ\"]\r\n    ]);\r\n\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        fetchListes();\r\n    }, [])\r\n\r\n    const fetchListes = async () => {\r\n        const tableau_id = router.query.id; \r\n        const response = await axios.get(`http://localhost:3300/api/listes/${tableau_id}`);\r\n        const data: IListe[] = response.data;\r\n        console.log(data);\r\n        setListes(data);\r\n    }\r\n\r\n    const onAddListe = async (listeName: string) => {\r\n        const result = await apiAddListe(listeName);\r\n        if(result){\r\n            const newListe = [...listes];\r\n            newListe.push({id: result[0], name: listeName});\r\n            setListes(newListe);\r\n        }\r\n    }\r\n\r\n    const apiAddListe = async(listeName: string) => {\r\n        const tableau_id = router.query.id; \r\n        try{\r\n            const result = await axios.post('http://localhost:3300/api/listes/new', {\r\n                name: listeName,\r\n                tableau_id\r\n            });\r\n            if(result.status === 400) throw new Error('Erreur lors de la création de la liste.');\r\n            return result.data;\r\n        } catch(e){\r\n            return false;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"tableau\">\r\n            { listes.map((liste, index) => (\r\n                <Liste key={liste.id} name={liste.name} cartes={vignettes[index]} />\r\n            ))}\r\n            <AddItem onSubmit={onAddListe} buttonName=\"Ajouter une liste\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Tableau;"]},"metadata":{},"sourceType":"module"}