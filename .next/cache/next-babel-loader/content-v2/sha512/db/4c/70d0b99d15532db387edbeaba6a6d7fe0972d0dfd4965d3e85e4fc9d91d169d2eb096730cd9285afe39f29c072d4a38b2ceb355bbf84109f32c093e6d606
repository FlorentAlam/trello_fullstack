{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Florent/Desktop/trello/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Florent/Desktop/trello/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\pages\\\\connexion.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Fieldset from \"../components/Fieldset\";\nimport Form from \"../components/Form\";\nimport Link from 'next/link';\nimport { checkLength } from \"../utils/error-checker\";\nimport axios from \"axios\";\n\nvar Connexion = function Connexion() {\n  _s();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState({\n    isActive: false,\n    message: ''\n  }),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (checkLength(password, 6)) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error(\"Votre mot de passe doit contenir au moins 6 caractères.\");\n\n            case 3:\n              if (checkLength(email, 1)) {\n                _context.next = 5;\n                break;\n              }\n\n              throw new Error(\"Veuillez fournir une adresse email correcte.\");\n\n            case 5:\n              setError({\n                isActive: false,\n                message: \"\"\n              });\n              _context.next = 8;\n              return axios.post('http://localhost:3300/api/user/', {\n                email: email,\n                password: password\n              });\n\n            case 8:\n              res = _context.sent;\n              console.log(res);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              setError({\n                isActive: true,\n                message: _context.t0.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function onSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      buttonName: \"Connexion\",\n      submitAction: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Fieldset, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        onChange: function onChange(event) {\n          setEmail(event.target.value);\n        },\n        label: \"Adresse email\",\n        autocomplete: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Fieldset, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: function onChange(event) {\n          setPassword(event.target.value);\n        },\n        label: \"Mot de passe\",\n        autocomplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/inscription\",\n      children: \"Pas encore inscrit ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, _this), error.isActive && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Connexion, \"9IAFMKGsezyWxXgjAWgpCO3AAc4=\");\n\n_c = Connexion;\nexport default Connexion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connexion\");","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/pages/connexion.tsx"],"names":["useState","ErrorMessage","Fieldset","Form","Link","checkLength","axios","Connexion","email","setEmail","password","setPassword","isActive","message","error","setError","onSubmit","Error","post","res","console","log","event","target","value"],"mappings":"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","sourcesContent":["import { ChangeEvent, useState } from \"react\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport Fieldset from \"../components/Fieldset\";\r\nimport Form from \"../components/Form\";\r\nimport Link from 'next/link';\r\nimport { checkLength } from \"../utils/error-checker\";\r\nimport axios from \"axios\";\r\n\r\nconst Connexion = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState({\r\n        isActive: false,\r\n        message: ''\r\n    });\r\n\r\n    const onSubmit = async () => {\r\n        try{\r\n            if(!checkLength(password, 6)) throw new Error(\"Votre mot de passe doit contenir au moins 6 caractères.\");\r\n            if(!checkLength(email, 1)) throw new Error(\"Veuillez fournir une adresse email correcte.\");\r\n            setError({\r\n                isActive: false,\r\n                message: \"\"\r\n            });\r\n            let res = await axios.post('http://localhost:3300/api/user/', {\r\n                email, password\r\n            });\r\n            console.log(res);\r\n\r\n        } catch (e){\r\n            setError({\r\n                isActive: true,\r\n                message: e.message\r\n            });\r\n        }\r\n    }    \r\n\r\n    return (\r\n    <>\r\n        <Form buttonName=\"Connexion\" submitAction={ onSubmit }>\r\n            <Fieldset \r\n                name=\"email\" \r\n                type=\"email\" \r\n                value={email} \r\n                onChange={(event:ChangeEvent<HTMLInputElement>) => { \r\n                    setEmail(event.target.value)\r\n                } }\r\n                label=\"Adresse email\"\r\n                autocomplete=\"email\"\r\n            />\r\n            <Fieldset \r\n                name=\"password\" \r\n                type=\"password\" \r\n                value={password} \r\n                onChange={(event:ChangeEvent<HTMLInputElement>) => { \r\n                    setPassword(event.target.value)\r\n                } }\r\n                label=\"Mot de passe\"\r\n                autocomplete=\"current-password\"\r\n            />\r\n        </Form>\r\n        <Link href=\"/inscription\">Pas encore inscrit ?</Link>\r\n        { error.isActive && <ErrorMessage message={ error.message }/> }\r\n    </>\r\n)};\r\n\r\nexport default Connexion;"]},"metadata":{},"sourceType":"module"}