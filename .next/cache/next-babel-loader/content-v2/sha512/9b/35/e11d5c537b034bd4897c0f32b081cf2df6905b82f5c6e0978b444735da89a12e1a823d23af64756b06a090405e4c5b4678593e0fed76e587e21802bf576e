{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Florent/Desktop/trello/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"C:/Users/Florent/Desktop/trello/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/Users/Florent/Desktop/trello/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Florent\\\\Desktop\\\\trello\\\\pages\\\\tableaux\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\nimport AddTableau from \"../../components/AddTableau\";\n\nvar Dashboard = function Dashboard() {\n  _s();\n\n  var _useState = useState(false),\n      isAddingTableau = _useState[0],\n      toggleAddTableau = _useState[1];\n\n  var _useState2 = useState(''),\n      tableauName = _useState2[0],\n      setTableauName = _useState2[1];\n\n  var _useState3 = useState([\"travail\", \"pas travail\"]),\n      tableaux = _useState3[0],\n      setTableaux = _useState3[1];\n\n  var onAddTableau = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tableauName) {\n      var newTab;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return apiAddTableau();\n\n            case 2:\n              newTab = _toConsumableArray(tableaux);\n              newTab.push(tableauName);\n              setTableaux(newTab);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onAddTableau(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var apiAddTableau = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post('http://localhost:3300/api/tableaux/new', {\n                body: {\n                  name: tableauName\n                }\n              });\n\n            case 2:\n              result = _context2.sent;\n              console.log(result);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function apiAddTableau() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tableaux.map(function (tableau, index) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/tableaux/\".concat(index),\n          children: tableau\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 37\n        }, _this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(AddTableau, {\n      onSubmit: onAddTableau\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Dashboard, \"GHTqOB9ghWG8nD4k83zHrhTXN/w=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/Florent/Desktop/trello/pages/tableaux/index.tsx"],"names":["axios","Link","useState","AddTableau","Dashboard","isAddingTableau","toggleAddTableau","tableauName","setTableauName","tableaux","setTableaux","onAddTableau","apiAddTableau","newTab","push","post","body","name","result","console","log","map","tableau","index"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBACwBF,QAAQ,CAAC,KAAD,CADhC;AAAA,MACbG,eADa;AAAA,MACIC,gBADJ;;AAAA,mBAEkBJ,QAAQ,CAAC,EAAD,CAF1B;AAAA,MAEbK,WAFa;AAAA,MAEAC,cAFA;;AAAA,mBAIYN,QAAQ,CAAC,CAAC,SAAD,EAAY,aAAZ,CAAD,CAJpB;AAAA,MAIbO,QAJa;AAAA,MAIHC,WAJG;;AAMpB,MAAMC,YAAY;AAAA,wEAAG,iBAAOJ,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACXK,aAAa,EADF;;AAAA;AAEXC,cAAAA,MAFW,sBAEEJ,QAFF;AAGjBI,cAAAA,MAAM,CAACC,IAAP,CAAYP,WAAZ;AACAG,cAAAA,WAAW,CAACG,MAAD,CAAX;;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZF,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAOA,MAAMC,aAAa;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGZ,KAAK,CAACe,IAAN,CAAW,wCAAX,EAAqD;AACtEC,gBAAAA,IAAI,EAAE;AACFC,kBAAAA,IAAI,EAAEV;AADJ;AADgE,eAArD,CADH;;AAAA;AACZW,cAAAA,MADY;AAMlBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbN,aAAa;AAAA;AAAA;AAAA,KAAnB;;AASA,sBACI;AAAA,eACMH,QAAQ,CAACY,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV;AAAA,0BACX;AAAA,+BAAoB,QAAC,IAAD;AAAM,UAAA,IAAI,sBAAeA,KAAf,CAAV;AAAA,oBAAmCD;AAAnC;AAAA;AAAA;AAAA;AAAA;AAApB,SAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,eADW;AAAA,KAAb,CADN,eAII,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEZ;AAAtB;AAAA;AAAA;AAAA;AAAA,aAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CA9BD;;GAAMP,S;;KAAAA,S;AAgCN,eAAeA,SAAf","sourcesContent":["import axios from \"axios\";\r\nimport Link from \"next/link\";\r\nimport { ChangeEvent, useState } from \"react\";\r\nimport AddTableau from \"../../components/AddTableau\";\r\n\r\nconst Dashboard = () => {\r\n    const [isAddingTableau, toggleAddTableau] = useState(false);\r\n    const [tableauName, setTableauName] = useState('');\r\n\r\n    const [tableaux, setTableaux] = useState([\"travail\", \"pas travail\"]);\r\n\r\n    const onAddTableau = async (tableauName: string) => {\r\n        await apiAddTableau();\r\n        const newTab = [...tableaux];\r\n        newTab.push(tableauName);\r\n        setTableaux(newTab);\r\n    }\r\n\r\n    const apiAddTableau = async() => {\r\n        const result = await axios.post('http://localhost:3300/api/tableaux/new', {\r\n            body: {\r\n                name: tableauName\r\n            }\r\n        });\r\n        console.log(result);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            { tableaux.map((tableau, index) => (\r\n                <button key={index}><Link href={`/tableaux/${index}`}>{tableau}</Link></button>\r\n            ))}\r\n            <AddTableau onSubmit={onAddTableau}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}